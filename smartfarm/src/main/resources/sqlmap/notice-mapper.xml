<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="notice">

<!--삭제대상인 첨부파일목록 조회 -->
<select id="removeFiles" resultType="file">
select * from notice_file where id in ( ${remove} )
</select>

<!-- 첨부된 파일정보들 삭제 -->
<delete id="fileDelete">
delete from notice_file where id in ( ${remove} )
</delete>

<!-- 첨부된 파일정보 조회 -->
<select id="fileInfo" resultType="file">
select * from notice_file where id = #{id}
</select>

<!-- 첨부된 파일목록 조회 -->
<select id="files" resultType="file">
select * from notice_file where notice_id = #{id}
</select>

<!-- 선택한 공지글 삭제 -->
<delete id="delete">
delete from notice where id = #{id}

</delete>



<!-- 선택한 공지글 변경저장 -->
<update id="update">
update notice 
set title = #{title}, content = #{content}, plan_id=<if test="plan_id == 0">null</if><if test="plan_id != 0">#{plan_id}</if>
where id = #{id}
</update>


<!-- 선택한 공지글정보조회 -->
<select id ="info" resultType="notice">

select n.*, name 
from notice n left outer join member m on writer = userid
where id = #{id}

</select>

<sql id="searchWhere">
<choose>
	<when test=" search =='tc' ">
	where title 	like  '%' || #{keyword} || '%'
	or    content 	like  '%' || #{keyword} || '%'
	</when>
	<when test=" search =='all' ">
	where title 	like  '%' || #{keyword} || '%'
	or    content 	like  '%' || #{keyword} || '%'
	or    writer in (select userid from member where name like  '%' || #{keyword} || '%') 
	</when>
	<when test=" search=='title' or search=='content'">
	where ${search} like  '%' || #{keyword} || '%'
	</when>
	<when test=" search=='writer' ">
	where writer in (select userid from member where name like  '%' || #{keyword} || '%') 
	</when>
</choose>
</sql>

<!-- 공지글 총건수 -->
<select id="totalCount" resultType="integer">
select count(*) from notice <include refid="searchWhere"/>
</select>

<!-- 공지글목록조회 -->
<select id="list" resultType="notice"> 
select n.*, (select count(*) from notice_file where notice_id = n.id)
from (select name, row_number() over(order by id) no, n.*
      from notice n inner join member m on userid = writer
      <include refid="searchWhere"/>) n
where no between #{beginList} and #{endList}
order by no desc
<!--  
select name, row_number() over(order by id) no, n.*
from notice n inner join member m on writer = userid
order by no desc
-->
</select>

<!-- 공지사항 첨부파일저장 -->
<insert id="fileRegister">
<foreach collection="files" item="file" separator=" "
			open="insert all" close="select * from dual" >
	into notice_file (notice_id, filename, filepath)
	values ( #{id}, #{file.filename}, #{file.filepath} )
</foreach>
</insert>

<!-- 공지글신규저장: 체험프로그램연결 추가 -->
<insert id="register">
<selectKey order="AFTER" resultType="integer" keyProperty="id">
select seq_notice.currval from dual 
</selectKey>

insert into notice ( title, content, writer, plan_id )
values ( #{title}, #{content}, #{writer}, <if test="plan_id == 0">null</if><if test="plan_id != 0">#{plan_id}</if> )
</insert>

</mapper>